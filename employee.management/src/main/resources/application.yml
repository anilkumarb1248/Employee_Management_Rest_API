server:
  port: 2025
  servlet:
    context-path: /EmployeeManagement
  error:
    path: /error

logging:
  file:
    name: A:/Workspace/logs/employee-management.log
  # traceID and spanId are predefined MDC keys - we want the logs to include them
#  pattern:
#    level: %5p [${spring.application.name:},%X{traceId:-},%X{spanId:-}]

spring:
  application:
    name: employee-management

# H2 database settings
  datasource:
    url: jdbc:h2:mem:employees_db
##We can change that behavior by using file-based storage. To do this we need to update the spring.datasource.url:
    #url: jdbc:h2:file:/data/demo
    driverClassName: org.h2.Driver
    username: employee
    password: employee
  jpa:
    database-platform: org.hibernate.dialect.H2Dialect
  h2:
    console:
      enabled: true



# MySql database settings
#spring.datasource.url = jdbc:mysql://localhost:3306/EMPLOYEE_TEST_DATABASE?useSSL=false&serverTimezone=UTC&useLegacyDatetimeCode=false
#spring.datasource.username = employee_test
#spring.datasource.password = employee_test


## Oracle database settings
#spring.datasource.url=jdbc:oracle:thin:@localhost:1521:xe
#spring.datasource.username=employee_test
#spring.datasource.password=employee_test
#spring.datasource.driver-class-name=oracle.jdbc.OracleDriver

### Hibernate Properties
##spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.MySQL5InnoDBDialect
#spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.Oracle10gDialect
## Hibernate ddl auto (create, create-drop, validate, update)
#spring.jpa.hibernate.ddl-auto = create
#spring.jpa.show-sql=true

### Hikari Connection pool configuration
##maximum number of milliseconds that a client will wait for a connection
#spring.datasource.hikari.connection-timeout = 60000
##minimum number of idle connections maintained by HikariCP in a connection pool
#spring.datasource.hikari.minimum-idle= 10
##maximum pool size
#spring.datasource.hikari.maximum-pool-size= 10
##maximum idle time for connection
#spring.datasource.hikari.idle-timeout=10000
## maximum lifetime in milliseconds of a connection in the pool after it is closed
#spring.datasource.hikari.max-lifetime= 1000
##default auto-commit behavior
#spring.datasource.hikari.auto-commit =true
